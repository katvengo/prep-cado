{"ast":null,"code":"var _jsxFileName = \"/Users/katvengo/prep-cado/App/Components/ImageInput.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport colors from \"../config/colors\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from \"expo-image-picker\";\n\nfunction ImageInput(_ref) {\n  var imageUri = _ref.imageUri,\n      onChangeImage = _ref.onChangeImage;\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, status;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(Platform.OS !== 'web')) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 3:\n            _await$ImagePicker$re = _context.sent;\n            status = _await$ImagePicker$re.status;\n\n            if (status !== 'granted') {\n              alert(\"You need to enable permission to access the library.\");\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress() {\n    return _regeneratorRuntime.async(function handlePress$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: {}\n            });\n            if (!imageUri) selectImage();else Alert.alert(\"Delete\", \"Are you sure you want to delete this image?\", [{\n              text: \"Yes\",\n              onPress: function onPress() {\n                return onChangeImage(null);\n              }\n            }, {\n              text: \"No\"\n            }]);\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, !imageUri && React.createElement(MaterialCommunityIcons, {\n    name: \"camera\",\n    size: 40,\n    color: colors.medium,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), imageUri && React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.light,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    width: 100\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});\nexport default ImageInput;","map":{"version":3,"sources":["/Users/katvengo/prep-cado/App/Components/ImageInput.js"],"names":["React","useEffect","colors","MaterialCommunityIcons","ImagePicker","ImageInput","imageUri","onChangeImage","requestPermission","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","handlePress","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","selectImage","Alert","text","onPress","styles","container","medium","uri","image","StyleSheet","create","backgroundColor","light","borderRadius","justifyContent","alignItems","height","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AAIA,OAAOC,MAAP;AACA,SAAQC,sBAAR,QAAqC,oBAArC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;AAEA,SAASC,UAAT,OAA+C;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,aAAgB,QAAhBA,aAAgB;AAC3CN,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,iBAAiB;AAClB,GAFM,EAEJ,EAFI,CAAT;;AAIE,MAAMA,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBACpBC,QAAQ,CAACC,EAAT,KAAgB,KADI;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGtBN,WAAW,CAACO,mCAAZ,EAHsB;;AAAA;AAAA;AAEfC,YAAAA,MAFe,yBAEfA,MAFe;;AAItB,gBAAIA,MAAM,KAAK,SAAf,EAA0B;AACxBC,cAAAA,KAAK,CAAC,sDAAD,CAAL;AACD;;AANqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAYA,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAClBV,YAAAA,WAAW,CAACW,uBAAZ,CAAoC;AAClCC,cAAAA,UAAU,EAAEZ,WAAW,CAACa,gBAAZ,CAA6BC,GADP;AAElCC,cAAAA,aAAa,EAAE,IAFmB;AAGlCC,cAAAA,MAAM,EAAE;AAH0B,aAApC;AAKA,gBAAI,CAACd,QAAL,EAAee,WAAW,GAA1B,KAEEC,KAAK,CAACT,KAAN,CAAY,QAAZ,EAAsB,6CAAtB,EAAqE,CACnE;AAAEU,cAAAA,IAAI,EAAE,KAAR;AAAeC,cAAAA,OAAO,EAAE;AAAA,uBAAMjB,aAAa,CAAC,IAAD,CAAnB;AAAA;AAAxB,aADmE,EAEnE;AAAEgB,cAAAA,IAAI,EAAE;AAAR,aAFmE,CAArE;;AARgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AA2BJ,SACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAET,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACpB,QAAD,IACD,oBAAC,sBAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,IAAI,EAAE,EAFN;AAGA,IAAA,KAAK,EAAEJ,MAAM,CAACyB,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQHrB,QAAQ,IAAI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE;AAACsB,MAAAA,GAAG,EAAEtB;AAAN,KAAf;AAAgC,IAAA,KAAK,EAAEmB,MAAM,CAACI,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IART,CADA,CADF;AAgBD;;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,eAAe,EAAE9B,MAAM,CAAC+B,KADjB;AAEPC,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,cAAc,EAAE,QAHT;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,MAAM,EAAE,GALD;AAMPC,IAAAA,KAAK,EAAE;AANA,GADoB;AAS/BT,EAAAA,KAAK,EAAE;AACHS,IAAAA,KAAK,EAAE,MADJ;AAEHD,IAAAA,MAAM,EAAE;AAFL;AATwB,CAAlB,CAAf;AAeA,eAAehC,UAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { View, StyleSheet, Image,\n    TouchableWithoutFeedback,Platform,\n    Alert,} from 'react-native';\nimport colors from '../config/colors';\nimport {MaterialCommunityIcons} from '@expo/vector-icons'\nimport * as ImagePicker from \"expo-image-picker\";\n\nfunction ImageInput({imageUri, onChangeImage}) {\n    useEffect(() => {\n        requestPermission();\n      }, []);\n    \n      const requestPermission = async () => {\n        if (Platform.OS !== 'web') {\n          const {status} = await\n          ImagePicker.requestMediaLibraryPermissionsAsync();\n          if (status !== 'granted') {\n            alert(\"You need to enable permission to access the library.\")\n          }\n        }\n        // const { granted } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        // if (!granted) alert(\"You need to enable permission to access the library.\");\n      };\n    \n      const handlePress = async () => {\n        ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.All,\n          allowsEditing: true,\n          aspect: {}\n        })\n        if (!imageUri) selectImage();\n        else\n          Alert.alert(\"Delete\", \"Are you sure you want to delete this image?\", [\n            { text: \"Yes\", onPress: () => onChangeImage(null) },\n            { text: \"No\" },\n          ]);\n      };\n\n      // const selectImage = async () => {\n      //   try {\n      //     const result = await ImagePicker.requestMediaLibraryPermissionsAsync({\n      //       mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      //       quality: 0.5,\n      //     });\n      //     console.log(result)\n      //     if (!result.cancelled) onChangeImage(result.uri);\n      //   } catch (error) {\n      //     console.log(\"Error reading an image\", error);\n      //   }\n      // };\n\n  return (\n    <TouchableWithoutFeedback onPress={handlePress}>\n    <View style={styles.container}>\n      {!imageUri && (\n      <MaterialCommunityIcons \n      name=\"camera\" \n      size={40}\n      color={colors.medium}\n      />\n      )}\n{imageUri && <Image source={{uri: imageUri}} style={styles.image} /> }\n  </View>       \n   </TouchableWithoutFeedback>\n\n  )\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n      backgroundColor: colors.light,\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 100,\n      width: 100\n  }, \n  image: {\n      width: '100%',\n      height: '100%'\n  }\n});\n\nexport default ImageInput;"]},"metadata":{},"sourceType":"module"}