{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/katvengo/prep-cado/App/Screens/MyAccountSettings.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Screen from \"../Screens/Screen\";\nimport ListItem from \"../Components/lists/ListItem\";\nimport Icon from \"../Components/Icon\";\nimport routes from \"../Navigation/routes\";\nimport colors from \"../config/colors\";\nimport useAuth from \"../Auth/useAuth\";\nimport { API, graphqlOperation } from '@aws-amplify/api';\nimport RecipeCard from \"../Components/AppRecipes/RecipeCard\";\nimport { getUser } from \"../../src/graphql/queries\";\nimport { listRecipes } from \"../../src/graphql/queries\";\nimport { FlatList } from 'react-native-gesture-handler';\n\nfunction currentUser(sub) {\n  var result, userData;\n  return _regeneratorRuntime.async(function currentUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n            id: sub\n          })));\n\n        case 2:\n          result = _context.sent;\n          userData = result.data.getUser;\n          return _context.abrupt(\"return\", userData);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction grabRecipesByUser(sub) {\n  var result;\n  return _regeneratorRuntime.async(function grabRecipesByUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listRecipes, {\n            authorRecipe: sub\n          })));\n\n        case 2:\n          result = _context2.sent;\n          return _context2.abrupt(\"return\", result);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction capitalize(s) {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nfunction MyAccountSettings(props) {\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      logOut = _useAuth.logOut;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userDetails = _useState2[0],\n      setUserDetails = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userRecipes = _useState4[0],\n      setUserRecipes = _useState4[1];\n\n  useEffect(function () {\n    currentUser(user.sub).then(function (result) {\n      var userInfo = result;\n      setUserDetails(userInfo);\n    }), grabRecipesByUser(user.sub).then(function (result) {\n      var allRecipes = result.data.listRecipes.items;\n      console.log(allRecipes);\n      setUserRecipes(_toConsumableArray(allRecipes));\n    });\n  }, []);\n  return React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 1\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }\n  }, React.createElement(View, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem, {\n    image: require(\"../assets/me.jpg\"),\n    title: userDetails.preferred_username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 10,\n    margin: 15,\n    marginTop: 50,\n    backgroundColor: colors.white,\n    flex: 1\n  },\n  subContainer: {\n    padding: 10,\n    marginBottom: 10,\n    marginTop: 30,\n    margin: 15,\n    backgroundColor: colors.white\n  }\n});\nexport default MyAccountSettings;","map":{"version":3,"sources":["/Users/katvengo/prep-cado/App/Screens/MyAccountSettings.js"],"names":["React","useState","useEffect","Auth","MaterialCommunityIcons","Screen","ListItem","Icon","routes","colors","useAuth","API","graphqlOperation","RecipeCard","getUser","listRecipes","FlatList","currentUser","sub","graphql","id","result","userData","data","grabRecipesByUser","authorRecipe","capitalize","s","charAt","toUpperCase","slice","MyAccountSettings","props","user","logOut","userDetails","setUserDetails","userRecipes","setUserRecipes","then","userInfo","allRecipes","items","console","log","styles","container","heading","require","preferred_username","StyleSheet","create","padding","margin","marginTop","backgroundColor","white","flex","subContainer","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport {View, Text, StyleSheet, ScrollView} from 'react-native'\nimport Screen from '../Screens/Screen'\nimport ListItem from '../Components/lists/ListItem'\nimport Icon from \"../Components/Icon\";\nimport routes from \"../Navigation/routes\";\nimport colors from '../config/colors'\nimport useAuth from \"../Auth/useAuth\";\nimport {API,  graphqlOperation } from '@aws-amplify/api';\nimport RecipeCard from '../Components/AppRecipes/RecipeCard'\nimport { getUser } from '../../src/graphql/queries'\nimport { listRecipes } from '../../src/graphql/queries'\nimport { FlatList } from 'react-native-gesture-handler';\n\nasync function currentUser (sub) {\n  const result = await API.graphql(graphqlOperation(getUser, {id: sub}))\n  const userData = result.data.getUser\n  return userData\n\n}\n\nasync function grabRecipesByUser (sub) {\n  const result = await API.graphql(graphqlOperation(listRecipes, {authorRecipe: sub}))\n  return result\n}\n\nfunction capitalize(s) {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nfunction MyAccountSettings (props) { \n  const { user, logOut } = useAuth();\n  const [ userDetails, setUserDetails ] = useState([]);\n  const [userRecipes, setUserRecipes ] = useState([]);\n\n   useEffect(() => {\n    currentUser(user.sub)\n    .then((result) => {\n      const userInfo = result\n      setUserDetails(userInfo)\n    }),\n    grabRecipesByUser(user.sub)\n    .then((result) => {\n      const allRecipes = result.data.listRecipes.items\n      console.log(allRecipes)\n      setUserRecipes([...allRecipes])\n    }) \n  }, []);\n\nreturn ( \n<Screen>\n<View style={styles.container}>\n        <View style={styles.heading}>\n        <ListItem\n          image={require('../assets/me.jpg')}\n          title={userDetails.preferred_username}\n        />\n        </View>\n</View>\n</Screen>\n);\n}\nconst styles = StyleSheet.create({\n    container: {\n        padding: 10,\n        margin: 15,\n        marginTop: 50,\n        backgroundColor: colors.white,\n        flex: 1\n    },\n    subContainer: {\n        padding: 10,\n        marginBottom: 10,\n        marginTop: 30,\n        margin: 15,\n        backgroundColor: colors.white,\n\n     },\n\n})\nexport default MyAccountSettings"]},"metadata":{},"sourceType":"module"}