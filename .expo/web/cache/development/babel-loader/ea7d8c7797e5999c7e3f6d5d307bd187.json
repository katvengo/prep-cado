{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/katvengo/prep-cado/App/Components/forms/AppFormField.js\";\nvar _excluded = [\"name\", \"width\"];\nimport React, { useState, useEffect } from \"react\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFormikContext } from 'formik';\nimport AppTextInput from \"../AppTextInput\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nfunction AppFormField(_ref) {\n  var name = _ref.name,\n      width = _ref.width,\n      otherProps = _objectWithoutProperties(_ref, _excluded);\n\n  useEffect(function () {\n    Keyboard.addListener(\"keyboardDidShow\", _keyboardDidShow);\n    Keyboard.addListener(\"keyboardDidHide\", _keyboardDidHide);\n    return function () {\n      Keyboard.removeListener(\"keyboardDidShow\", _keyboardDidShow);\n      Keyboard.removeListener(\"keyboardDidHide\", _keyboardDidHide);\n    };\n  }, []);\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      keyboardStatus = _useState2[0],\n      setKeyboardStatus = _useState2[1];\n\n  var _keyboardDidShow = function _keyboardDidShow() {\n    return setKeyboardStatus(\"Keyboard Shown\");\n  };\n\n  var _keyboardDidHide = function _keyboardDidHide() {\n    return setKeyboardStatus(\"Keyboard Hidden\");\n  };\n\n  var _useFormikContext = useFormikContext(),\n      setFieldTouched = _useFormikContext.setFieldTouched,\n      handleChange = _useFormikContext.handleChange,\n      errors = _useFormikContext.errors,\n      touched = _useFormikContext.touched;\n\n  return React.createElement(React.Fragment, null, React.createElement(AppTextInput, _extends({\n    placeholder: name,\n    onChangeText: handleChange(name),\n    onBlur: function onBlur() {\n      return setFieldTouched(name);\n    },\n    width: width,\n    onSubmitEditing: Keyboard.dismiss\n  }, otherProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }\n  })), touched[name] && React.createElement(ErrorMessage, {\n    error: errors[name],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }\n  }));\n}\n\nexport default AppFormField;","map":{"version":3,"sources":["/Users/katvengo/prep-cado/App/Components/forms/AppFormField.js"],"names":["React","useState","useEffect","useFormikContext","AppTextInput","ErrorMessage","AppFormField","name","width","otherProps","Keyboard","addListener","_keyboardDidShow","_keyboardDidHide","removeListener","undefined","keyboardStatus","setKeyboardStatus","setFieldTouched","handleChange","errors","touched","dismiss"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AAEA,SAASC,gBAAT,QAAiC,QAAjC;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;;AAGA,SAASC,YAAT,OAAsD;AAAA,MAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,MAAvBC,KAAuB,QAAvBA,KAAuB;AAAA,MAAbC,UAAa;;AACnDP,EAAAA,SAAS,CAAC,YAAM;AACbQ,IAAAA,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCC,gBAAxC;AACAF,IAAAA,QAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCE,gBAAxC;AAGA,WAAO,YAAM;AACXH,MAAAA,QAAQ,CAACI,cAAT,CAAwB,iBAAxB,EAA2CF,gBAA3C;AACAF,MAAAA,QAAQ,CAACI,cAAT,CAAwB,iBAAxB,EAA2CD,gBAA3C;AACD,KAHD;AAID,GATO,EASL,EATK,CAAT;;AAWC,kBAA4CZ,QAAQ,CAACc,SAAD,CAApD;AAAA;AAAA,MAAOC,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,MAAML,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMK,iBAAiB,CAAC,gBAAD,CAAvB;AAAA,GAAzB;;AACA,MAAMJ,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAMI,iBAAiB,CAAC,iBAAD,CAAvB;AAAA,GAAzB;;AAED,0BAAyDd,gBAAgB,EAAzE;AAAA,MAAOe,eAAP,qBAAOA,eAAP;AAAA,MAAwBC,YAAxB,qBAAwBA,YAAxB;AAAA,MAAsCC,MAAtC,qBAAsCA,MAAtC;AAAA,MAA8CC,OAA9C,qBAA8CA,OAA9C;;AACH,SACA,0CACA,oBAAC,YAAD;AACA,IAAA,WAAW,EAAEd,IADb;AAEA,IAAA,YAAY,EAAEY,YAAY,CAACZ,IAAD,CAF1B;AAGA,IAAA,MAAM,EAAE;AAAA,aAAMW,eAAe,CAACX,IAAD,CAArB;AAAA,KAHR;AAIA,IAAA,KAAK,EAAEC,KAJP;AAKA,IAAA,eAAe,EAAEE,QAAQ,CAACY;AAL1B,KAMIb,UANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,EASEY,OAAO,CAACd,IAAD,CAAP,IAAiB,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEa,MAAM,CAACb,IAAD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATnB,CADA;AAaC;;AAED,eAAeD,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Keyboard, Text, TextInput, StyleSheet, View } from \"react-native\";\nimport { useFormikContext } from 'formik'\n\nimport AppTextInput from '../AppTextInput'\nimport ErrorMessage from './ErrorMessage'\n\n\nfunction AppFormField ({ name, width, ...otherProps}) { \n   useEffect(() => {\n      Keyboard.addListener(\"keyboardDidShow\", _keyboardDidShow);\n      Keyboard.addListener(\"keyboardDidHide\", _keyboardDidHide);\n  \n      // cleanup function\n      return () => {\n        Keyboard.removeListener(\"keyboardDidShow\", _keyboardDidShow);\n        Keyboard.removeListener(\"keyboardDidHide\", _keyboardDidHide);\n      };\n    }, []);\n  \n    const [keyboardStatus, setKeyboardStatus] = useState(undefined);\n    const _keyboardDidShow = () => setKeyboardStatus(\"Keyboard Shown\");\n    const _keyboardDidHide = () => setKeyboardStatus(\"Keyboard Hidden\");\n  \n   const {setFieldTouched, handleChange, errors, touched} = useFormikContext();\nreturn ( \n<>\n<AppTextInput\nplaceholder={name}\nonChangeText={handleChange(name)}\nonBlur={() => setFieldTouched(name)}\nwidth={width}\nonSubmitEditing={Keyboard.dismiss}\n{...otherProps}\n/>\n{ touched[name] && <ErrorMessage error={errors[name]} /> }\n</>\n);\n}\n\nexport default AppFormField"]},"metadata":{},"sourceType":"module"}