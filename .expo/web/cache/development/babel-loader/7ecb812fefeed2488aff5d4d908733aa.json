{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/katvengo/prep-cado/App/Screens/MyAccount.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, Button } from 'react';\nimport { Auth } from 'aws-amplify';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport DrawerNavigation from \"../../App/Navigation/DrawerNavigation\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Screen from \"../Screens/Screen\";\nimport ListItem from \"../Components/lists/ListItem\";\nimport Icon from \"../Components/Icon\";\nimport routes from \"../Navigation/routes\";\nimport colors from \"../config/colors\";\nimport useAuth from \"../Auth/useAuth\";\nimport { API, graphqlOperation } from '@aws-amplify/api';\nimport RecipeCard from \"../Components/AppRecipes/RecipeCard\";\nimport { getUser } from \"../../src/graphql/queries\";\nimport { listRecipes } from \"../../src/graphql/queries\";\nimport { FlatList } from 'react-native-gesture-handler';\n\nfunction currentUser(sub) {\n  var result, userData;\n  return _regeneratorRuntime.async(function currentUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(getUser, {\n            id: sub\n          })));\n\n        case 2:\n          result = _context.sent;\n          userData = result.data.getUser;\n          return _context.abrupt(\"return\", userData);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction grabRecipesByUser(sub) {\n  var result;\n  return _regeneratorRuntime.async(function grabRecipesByUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(API.graphql(graphqlOperation(listRecipes, {\n            authorRecipe: sub\n          })));\n\n        case 2:\n          result = _context2.sent;\n          console.log(result, \"MyAccount grabRecipesByUserFunction\");\n          return _context2.abrupt(\"return\", result);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction capitalize(s) {\n  if (typeof s !== 'string') return '';\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\nfunction MyAccount(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user,\n      logOut = _useAuth.logOut;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userDetails = _useState2[0],\n      setUserDetails = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userRecipes = _useState4[0],\n      setUserRecipes = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refreshing = _useState6[0],\n      setRefreshing = _useState6[1];\n\n  useEffect(function () {\n    currentUser(user.sub).then(function (result) {\n      var userInfo = result;\n      setUserDetails(userInfo);\n    }), grabRecipesByUser(user.sub).then(function (result) {\n      console.log(result);\n\n      if (result) {\n        var allRecipes = result.data.listRecipes.items;\n        console.log(allRecipes);\n        setUserRecipes(_toConsumableArray(allRecipes));\n      } else {\n        print(\"lets get to creating your first recipe!\");\n      }\n    });\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Screen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.subheading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, React.createElement(ListItem, {\n    image: require(\"../assets/me.jpg\"),\n    title: userDetails.preferred_username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.log,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"logout\",\n    backgroundColor: \"#ffe66d\",\n    size: 30,\n    onPress: function onPress() {\n      return logOut();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }\n  }))), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 1\n    }\n  }, React.createElement(FlatList, {\n    data: userRecipes,\n    keyExtractor: function keyExtractor(recipe) {\n      return recipe.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(RecipeCard, {\n        header: item.name,\n        image: item.images[0],\n        thumbnailUrl: item.images[0],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    padding: 15,\n    margin: 15,\n    marginTop: 50,\n    backgroundColor: colors.white,\n    flex: 1,\n    flexDirection: 'column'\n  },\n  subContainer: {\n    padding: 10,\n    marginBottom: 10,\n    marginTop: 30,\n    margin: 15,\n    backgroundColor: colors.white\n  },\n  right: {\n    alignSelf: 'flex-end',\n    marginTop: -35\n  },\n  left: {\n    alignSelf: 'flex-start'\n  },\n  heading: {\n    display: 'flex'\n  },\n  subheading: {\n    alignSelf: 'flex-start'\n  },\n  log: {\n    alignSelf: 'flex-end'\n  }\n});\nexport default MyAccount;","map":{"version":3,"sources":["/Users/katvengo/prep-cado/App/Screens/MyAccount.js"],"names":["React","useState","useEffect","Button","Auth","MaterialCommunityIcons","DrawerActions","useNavigation","DrawerNavigation","Screen","ListItem","Icon","routes","colors","useAuth","API","graphqlOperation","RecipeCard","getUser","listRecipes","FlatList","currentUser","sub","graphql","id","result","userData","data","grabRecipesByUser","authorRecipe","console","log","capitalize","s","charAt","toUpperCase","slice","MyAccount","navigation","user","logOut","userDetails","setUserDetails","userRecipes","setUserRecipes","refreshing","setRefreshing","then","userInfo","allRecipes","items","print","styles","heading","subheading","require","preferred_username","recipe","toString","item","name","images","StyleSheet","create","container","padding","margin","marginTop","backgroundColor","white","flex","flexDirection","subContainer","marginBottom","right","alignSelf","left","display"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Button } from 'react';\nimport { Auth } from 'aws-amplify';\n\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport DrawerNavigation from '../../App/Navigation/DrawerNavigation'\n\nimport { View, Text, StyleSheet, ScrollView } from 'react-native'\nimport Screen from '../Screens/Screen'\nimport ListItem from '../Components/lists/ListItem'\nimport Icon from \"../Components/Icon\";\nimport routes from \"../Navigation/routes\";\nimport colors from '../config/colors'\nimport useAuth from \"../Auth/useAuth\";\nimport { API, graphqlOperation } from '@aws-amplify/api';\nimport RecipeCard from '../Components/AppRecipes/RecipeCard'\nimport { getUser } from '../../src/graphql/queries'\nimport { listRecipes } from '../../src/graphql/queries'\nimport { FlatList } from 'react-native-gesture-handler';\n\nasync function currentUser(sub) {\n  const result = await API.graphql(graphqlOperation(getUser, { id: sub }))\n  const userData = result.data.getUser\n  return userData\n\n}\n\nasync function grabRecipesByUser(sub) {\n  const result = await API.graphql(graphqlOperation(listRecipes, { authorRecipe: sub }))\n  console.log(result, \"MyAccount grabRecipesByUserFunction\")\n  return result\n}\n\nfunction capitalize(s) {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nfunction MyAccount({navigation}) {\n  const { user, logOut } = useAuth();\n  const [userDetails, setUserDetails] = useState([]);\n  const [userRecipes, setUserRecipes] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n\n  // const navigation = useNavigation();\n\n  useEffect(() => {\n    currentUser(user.sub)\n      .then((result) => {\n        const userInfo = result\n        setUserDetails(userInfo)\n      }),\n      grabRecipesByUser(user.sub)\n        .then((result) => {\n          console.log(result)\n          if (result) {\n            const allRecipes = result.data.listRecipes.items\n            console.log(allRecipes)\n            setUserRecipes([...allRecipes])\n          } else {\n            print(\"lets get to creating your first recipe!\")\n          }\n          \n        })\n  }, []);\n\n  return (\n    <>\n    <Screen>\n      {/* <View style={styles.container}> */}\n    {/* <View style={styles.left}>\n          <MaterialCommunityIcons\n            name=\"email-outline\"\n            color={colors.dark}\n            size={30}\n            onPress={() => navigation.navigate(routes.MESSAGES)}\n            style={styles.setting}\n          />\n        </View>\n    <View style={styles.right}>\n          <MaterialCommunityIcons\n            name=\"settings\"\n            color={colors.dark}\n            size={30}\n            onPress={() => navigation.navigate(routes.SETTINGS)}\n            style={styles.setting}\n          />\n        </View> */}\n        <View style={styles.heading}>\n        <View style={styles.subheading}>\n        <ListItem\n          image={require('../assets/me.jpg')}\n          title={userDetails.preferred_username}\n        />\n        </View>\n<View style={styles.log}>  \n<MaterialCommunityIcons name=\"logout\" backgroundColor=\"#ffe66d\" size={30} onPress={() => logOut()}/>\n</View>\n        </View> \n<ScrollView>\n          <FlatList\n          data={userRecipes}\n          keyExtractor={(recipe) => recipe.id.toString()}\n          renderItem={({ item }) => (\n            <RecipeCard\n              header={item.name}\n              // subTitle={\"$\" + item.ingredients}\n              image={item.images[0]}\n              //onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\n              thumbnailUrl={item.images[0]}\n            />\n          )}   \n        /> \n        </ScrollView>\n</Screen>\n</>\n)\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 15,\n    margin: 15,\n    marginTop: 50,\n    backgroundColor: colors.white,\n    flex: 1,\n    flexDirection: 'column'\n  },\n  subContainer: {\n    padding: 10,\n    marginBottom: 10,\n    marginTop: 30,\n    margin: 15,\n    backgroundColor: colors.white,\n\n  },\n  right: {\n    alignSelf: 'flex-end',\n    marginTop: -35,\n\n    \n  },\n  left: {\n    alignSelf: 'flex-start',\n    \n  },\n  heading: {\n    display: 'flex',\n\n  },\n  subheading: {\n    alignSelf: 'flex-start'\n  },\n  log: {\n    alignSelf: 'flex-end',\n  },\n\n})\nexport default MyAccount"]},"metadata":{},"sourceType":"module"}