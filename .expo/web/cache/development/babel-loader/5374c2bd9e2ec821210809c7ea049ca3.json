{"ast":null,"code":"var _jsxFileName = \"/Users/katvengo/prep-cado/App/Components/ImageInput.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport colors from \"../config/colors\";\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from \"expo-image-picker\";\n\nfunction ImageInput(_ref) {\n  var imageUri = _ref.imageUri,\n      onChangeImage = _ref.onChangeImage;\n  useEffect(function () {\n    requestPermission();\n  }, []);\n\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to enable permission to access the library.\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handlePress = function handlePress() {\n    if (!imageUri) selectImage();else Alert.alert(\"Delete\", \"Are you sure you want to delete this image?\", [{\n      text: \"Yes\",\n      onPress: function onPress() {\n        return onChangeImage(null);\n      }\n    }, {\n      text: \"No\"\n    }]);\n  };\n\n  var selectImage = function selectImage() {\n    var result;\n    return _regeneratorRuntime.async(function selectImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 0.5\n            }));\n\n          case 3:\n            result = _context2.sent;\n            console.log(result);\n            if (!result.cancelled) onChangeImage(result.uri);\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"Error reading an image\", _context2.t0);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, !imageUri && React.createElement(MaterialCommunityIcons, {\n    name: \"camera\",\n    size: 40,\n    color: colors.medium,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), imageUri && React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.light,\n    borderRadius: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 100,\n    width: 100\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  }\n});\nexport default ImageInput;","map":{"version":3,"sources":["/Users/katvengo/prep-cado/App/Components/ImageInput.js"],"names":["React","useEffect","colors","MaterialCommunityIcons","ImagePicker","ImageInput","imageUri","onChangeImage","requestPermission","requestMediaLibraryPermissionsAsync","granted","alert","handlePress","selectImage","Alert","text","onPress","mediaTypes","MediaTypeOptions","Images","quality","result","console","log","cancelled","uri","styles","container","medium","image","StyleSheet","create","backgroundColor","light","borderRadius","justifyContent","alignItems","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { View, StyleSheet, Image,\n    TouchableWithoutFeedback,\n    Alert,} from 'react-native';\nimport colors from '../config/colors';\nimport {MaterialCommunityIcons} from '@expo/vector-icons'\nimport * as ImagePicker from \"expo-image-picker\";\n\nfunction ImageInput({imageUri, onChangeImage}) {\n    useEffect(() => {\n        requestPermission();\n      }, []);\n    \n      const requestPermission = async () => {\n        \n        const { granted } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (!granted) alert(\"You need to enable permission to access the library.\");\n      };\n    \n      const handlePress = () => {\n        if (!imageUri) selectImage();\n        else\n          Alert.alert(\"Delete\", \"Are you sure you want to delete this image?\", [\n            { text: \"Yes\", onPress: () => onChangeImage(null) },\n            { text: \"No\" },\n          ]);\n      };\n\n      const selectImage = async () => {\n        try {\n          const result = await ImagePicker.requestMediaLibraryPermissionsAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            quality: 0.5,\n          });\n          console.log(result)\n          if (!result.cancelled) onChangeImage(result.uri);\n        } catch (error) {\n          console.log(\"Error reading an image\", error);\n        }\n      };\n\n  return (\n    <TouchableWithoutFeedback onPress={handlePress}>\n    <View style={styles.container}>\n      {!imageUri && (\n      <MaterialCommunityIcons \n      name=\"camera\" \n      size={40}\n      color={colors.medium}\n      />\n      )}\n{imageUri && <Image source={{uri: imageUri}} style={styles.image} /> }\n  </View>       \n   </TouchableWithoutFeedback>\n\n  )\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n      backgroundColor: colors.light,\n      borderRadius: 15,\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: 100,\n      width: 100\n  }, \n  image: {\n      width: '100%',\n      height: '100%'\n  }\n});\n\nexport default ImageInput;"]},"metadata":{},"sourceType":"module"}